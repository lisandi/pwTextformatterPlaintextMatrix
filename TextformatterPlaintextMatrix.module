<?php

/* This program is free software. It comes without any warranty, to
 * the extent permitted by applicable law. You can redistribute it
 * and/or modify it under the terms of the Do What The Fuck You Want
 * To Public License, Version 2, as published by Sam Hocevar. See
 * http://sam.zoy.org/wtfpl/COPYING for more details. */

/**
 * Plaintext Matrix
 *
 * Transforms your textarea into matrix. Input records (one on line) in plaintext pw query syntax
 * and get array of objects back upon field loading.
 *
 * @author Adam Kiss <iam@adamkiss.com>
 *
**/

class TextformatterPlaintextMatrix extends Textformatter {

	public static function getModuleInfo() {
		return array(
			'title' => 'Plaintext Matrix', 
			'version' => 100, 
			'summary' => "Transforms your textarea into matrix. Input records (one on line) in plaintext pw query syntax and get array of objects back upon field loading.", 
		); 
	}

	/**
	* Detects whether parameter is numeric and returns retyped value (if needed/possible)
	* 
	* @param string $value – string to check
	* @return string|int|float - retyped value
	*/
	private function numericTransform($value){
		return is_numeric($value) ? $value + 0 : $value;
	}

	/**
	* Textarea formatting functions – accepts textarea's content and returns it 'matrixed'
	* 
	* @param string $str – textarea content
	* @return array
	*/
	public function format(&$str) {
		if (empty($str)){
			$str = array();
			return;
		}

		//prepare array
		$parsedObjects = array();
		$parsedObjects = explode ("\n",trim($str));

		foreach ($parsedObjects as &$line){

			// create new query parser
			$queryParser = new Selectors($line);

			// create key => value array and import parsed values
			$kvarray = array();
			foreach ($queryParser as $kvpair){

				//add key => (possibly retyped) value pair
				$kvarray[$kvpair->field] = $this->numericTransform($kvpair->value);

			}

			// return stdobject into array
			$line = (object) $kvarray;
		}

		// return array of objects
		$str = $parsedObjects;
	}
}
